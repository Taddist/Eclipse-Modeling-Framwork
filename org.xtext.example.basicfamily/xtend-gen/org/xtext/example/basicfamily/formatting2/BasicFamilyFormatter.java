/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.basicfamily.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.sirius.sample.basicfamily.Family;
import org.eclipse.sirius.sample.basicfamily.Person;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.example.basicfamily.services.BasicFamilyGrammarAccess;

@SuppressWarnings("all")
public class BasicFamilyFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private BasicFamilyGrammarAccess _basicFamilyGrammarAccess;
  
  protected void _format(final Family family, @Extension final IFormattableDocument document) {
    EList<Person> _members = family.getMembers();
    for (final Person person : _members) {
      document.<Person>format(person);
    }
  }
  
  public void format(final Object family, final IFormattableDocument document) {
    if (family instanceof XtextResource) {
      _format((XtextResource)family, document);
      return;
    } else if (family instanceof Family) {
      _format((Family)family, document);
      return;
    } else if (family instanceof EObject) {
      _format((EObject)family, document);
      return;
    } else if (family == null) {
      _format((Void)null, document);
      return;
    } else if (family != null) {
      _format(family, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(family, document).toString());
    }
  }
}
